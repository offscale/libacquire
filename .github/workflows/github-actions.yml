name: CI for Linux, Windows, macOS

on:
  push:
    branches:
      - master

jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: deps
        run: sudo apt-get install -y libssl-dev libcurl4-openssl-dev libarchive-dev
      - name: build
        run: |
          mkdir cmake-build-"$RUNNER_OS"-debug && pushd "$_"
          cmake -DCMAKE_BUILD_TYPE="Debug" ..
          cmake --build .
      - name: test
        run: cd cmake-build-"$RUNNER_OS"-debug && ctest .
      - name: release
        run: |
          cd "$GITHUB_WORKSPACE"
          echo "${{ secrets.GITHUB_TOKEN }}" > .token
          gh auth login --with-token < .token
          rm .token
          gh release delete -y amalgamation
          gh release create amalgamation --target master cmake-build-"$RUNNER_OS"-debug/src/acquire.h
  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: deps
        run: brew install pkg-config libarchive  # openssl
      - name: build
        run: |
          prefix="$(brew --prefix libarchive)"
          export LDFLAGS="-L${prefix}/lib"
          export CPPFLAGS="-I${prefix}/include"
          export PKG_CONFIG_PATH="${prefix}/lib/pkgconfig"
          mkdir cmake-build-"$RUNNER_OS"-debug && cd "$_"
          cmake -DCMAKE_BUILD_TYPE="Debug" ..
          cmake --build .
      - name: test
        run: cd cmake-build-"$RUNNER_OS"-debug && ctest .
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest
      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v10
      - name: Run CMake consuming CMakePreset.json and vcpkg.json by mean of vcpkg.
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: 'ninja-multi-vcpkg'
          buildPreset: 'ninja-multi-vcpkg'
      - uses: ilammy/msvc-dev-cmd@v1
      - name: build
        run: |
          md cmake-build-debug
          cd cmake-build-debug
          cmake -DCMAKE_TOOLCHAIN_FILE="..\vcpkg\scripts\buildsystems\vcpkg.cmake" ..
          cmake --build .
        shell: cmd
      - name: test
        run: ctest .
        working-directory: cmake-build-debug
