name: CI for Linux, Windows, macOS

on:
  push:
    branches:
      - master

jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: deps
        run: sudo apt-get install -y libssl-dev libcurl4-openssl-dev libarchive-dev
      - name: build
        run: |
          mkdir cmake-build-"$RUNNER_OS"-debug && pushd "$_"
          cmake -DCMAKE_BUILD_TYPE="Debug" ..
          cmake --build .
      - name: test
        run: cd cmake-build-"$RUNNER_OS"-debug && ctest .
      - name: release
        run: |
          cd "$GITHUB_WORKSPACE"
          echo "${{ secrets.GITHUB_TOKEN }}" > .token
          gh auth login --with-token < .token
          rm .token
          gh release delete -y amalgamation
          gh release create amalgamation --target master cmake-build-"$RUNNER_OS"-debug/src/acquire.h
  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: deps
        run: brew install pkg-config libarchive  # openssl
      - name: build
        run: |
          prefix="$(brew --prefix libarchive)"
          export LDFLAGS="-L${prefix}/lib"
          export CPPFLAGS="-I${prefix}/include"
          export PKG_CONFIG_PATH="${prefix}/lib/pkgconfig"
          mkdir cmake-build-"$RUNNER_OS"-debug && cd "$_"
          cmake -DCMAKE_BUILD_TYPE="Debug" ..
          cmake --build .
      - name: test
        run: cd cmake-build-"$RUNNER_OS"-debug && ctest .
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      # - uses: ilammy/msvc-dev-cmd@v1
      - name: Cache vcpkg
        uses: actions/cache@v2
        env:
          cache-name: cache-vcpkg
        with:
          path: ${{ github.workspace }}/vcpkg
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: clone and bootstrap vcpkg
        run: |
          cd "%GITHUB_WORKSPACE%"
          IF NOT EXIST "vcpkg" (
              git clone --depth=360 https://github.com/microsoft/vcpkg
              cd "vcpkg"
              git reset --hard d8b9ae5
              .\bootstrap-vcpkg.bat
          )
        shell: cmd
      - name: Install dependencies with vcpkg
        run: |
          cd "%GITHUB_WORKSPACE%\vcpkg"
          IF NOT EXIST "buildtrees\libarchive" (
              .\vcpkg "--version"
              .\vcpkg "install" "libarchive"
          )
        shell: cmd
      - name: build
        run: |
          cd "%GITHUB_WORKSPACE%"
          set vcpkg="%cd%\vcpkg"
          md "cmake-build-debug"
          cd "cmake-build-debug"
          cmake -DCMAKE_TOOLCHAIN_FILE="%vcpkg%\scripts\buildsystems\vcpkg.cmake" ..
          cmake --build .
        shell: cmd
      - name: test
        run: |
          cd "%GITHUB_WORKSPACE%\libacquire\cmake-build-debug"
          ctest -C "Debug" .
        shell: cmd
